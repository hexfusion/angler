This file describes the additional NCR contributions to the 
MajorCool package. The contents of this 'plus pack' is not
required for MajorCool operation and their implementation is
entirely optional. They are being made available with an
even lesser guarantee than is made with MajorCool (less than
'none' is still 'none' :).

For proper operation, all scripts must be copied to Majordomo's 
home directory and be made executable (mode 550).

approval.shar
	A set of patches to integrate the Web with Majordomo 1.94.4:
	$URL expansion and an Approval Queue. See the README included
	in the shar.

mj_build_aliases
	With the addition of the 'owner' keyword and a standard
	archive_dir, a Majordomo configuration has all the necessary
	information needed to autmatically build a sendmail aliases
	file. That is exactly what mj_build_aliases does. The output
	of the program can be merged with the system aliases file or
	used with the sendmail.cf 'OA' option as a standalone alias 
	file. Digests aliases are not yet supported, though I am
	willing to accept patches. The build process will call the
	mj_background_tasks script if found; this is where we place
	an invocation of mj_key_cache.

mj_create_list, mj_rename_list, mj_delete_list
	MajorCool provides the ability to request that a mailing list
	be added, renamed, or deleted. Normally, that request is mailed
	to the majordomo-owner for manual processing. With the use of 
	the mj_XXXXXX_list programs, that process can be automated. 
	Even if access via the Web is not enabled, these programs can 
	be used by the Majordomo admin as command-line tools (invoked 
	via Majordomo's wrapper). The scripts will invoke the 
	mj_build_aliases script if found in the Majordomo $homedir.

mj_list-unavail
	This bounce script simply returns a message to the sender
	saying the list is not ready yet. We use it for any lists where
	an owner keyword has not been defined. This prevents a list 
	from being used before it is 'properly' enabled.

mj_log
	This is a rather simple-minded program that, if added to the
	alias for a list:
	    list: "|..resend..","|/usr/misc/majordomo/.bin/ wrapper mj_log list"
	will save the From_ line of the message sender to the list.log
	file in the Majordomo list directory. Not particualrly 
	effective, but it is useful for tracking some messages and 
	identifying unused lists.

mj_owner_bounce
	At one point in time, we found that most mail to
	majordomo-owner was mail from ill-behaved mailers trying to
	reply to mail from Majordomo itself (eg, the result of a
	"lists" command). We put this bounce script in place on the
	majordomo-owner alias to discourage this behavior. Users
	mailing to majordomo-owner were told of the 'human' address;
	those that wanted to speak to a real person would resend, while
	those that were trying to mail to Majordomo would fix their
	headers.

mj_filter, mj_filter.cf
	This is not really a Majordomo addition per se. It is a sort
	of "poor man's Procmail" (procmail is a mail filtering
	tool). By adding header regular-expression checks, mail to
	an address can be redirected to additional addresses. The
	header patterns and their corresponding address redirects
	are kept in the mj_filter.cf file. The mj_filter program
	just uses some of the existing Majordomo code to parse the
	incoming mail headers. It is enabled as follows:
	    inbound: "|/usr/misc/majordomo/.bin/wrapper mj_filter"
	We use this to break out newsletters sent to a central
	address and redistribute to other lists based on the Subject
	or the From.

