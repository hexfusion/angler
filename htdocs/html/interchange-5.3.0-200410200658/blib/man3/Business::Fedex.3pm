.\" Automatically generated by Pod::Man version 1.15
.\" Wed Oct 20 09:10:07 2004
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Business::Fedex 3"
.TH Business::Fedex 3 "perl v5.6.1" "2004-10-20" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Business::Fedex \- fetches FedEx shipping services
and rates for a given origin and zip and a given destination country
and zip code
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\&  use Business::Fedex;
\&  my $fedex = new Business::Fedex (
\&        orig_country => 'US', # ISO code
\&        orig_zip => '90095',
\&        dest_country => 'US',
\&        dest_zip => '94402',
\&        );
\&  $fedex->packaging('Envelope'); # FedEx Enveloppe, not yours
\&  $fedex->getrate; # dies on error
.Ve
.Vb 9
\&  # OR
\&  # getrate can create the object directly
\&  my $fedex = Business::Fedex->getrate(
\&        orig_country => 'CA', # ISO code
\&        orig_zip => 'H3C3R7',
\&        dest_country => 'US',
\&        dest_zip => '94402',
\&        packaging => 'Envelope',
\&        );
.Ve
.Vb 9
\&  # many services might be available
\&  print "Service\etDelay\etDropoff\etOther\etTotal\en";
\&  foreach ($fedex->services) {
\&        # a hash ref object
\&        print join("\et", $_->{service},  $_->{delay}, $_->{dropoff}, $_->{other}, $_->{total}), "\en";
\&  }
\&  print "\enCheapest:\en";
\&  $_ = $fedex->cheapest;
\&  print join("\et", $_->{service},  $_->{delay}, $_->{dropoff}, $_->{other}, $_->{total}), "\en";
.Ve
.Vb 5
\&  print "\enOtherDetails:\en";
\&  my %d = $fedex->other_details;
\&  foreach (keys %d) {
\&         print "$_: $d{$_}\en";
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module let you fetch Federal Express shipping rates from and to any country.
.PP
The module makes a \s-1HTTP\s0 request at http://www.fedex.com/servlet/RateFinderServlet?orig_country=US&language=english
and parses the output into an array of hashes, see services method.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Following are the list of possible attributes and values for a Fedex object,
with defaults and required values highlighted
.Ip "orig_country" 4
.IX Item "orig_country"
\&\s-1ISO-3122\s0 country code from where the package is to be sent (your place), \fIrequired\fR.
.Ip "orig_zip" 4
.IX Item "orig_zip"
Zip code from where the package is to be sent (your place), \fIrequired\fR.
.Ip "dest_country, dest_zip" 4
.IX Item "dest_country, dest_zip"
Same as orig for destination (their place), \fIrequired\fR.
.Ip "company_type" 4
.IX Item "company_type"
Type of Fedex service, one of: \fIExpress\fR (default), \fIGround\fR or \fIHome\fR
.Ip "packaging" 4
.IX Item "packaging"
How the parcel is packaged, one of \fIEnvelope\fR, \fIPak\fR, \fIBox\fR, \fITube\fR, \fIMy Packaging\fR (default),
.Ip "weight" 4
.IX Item "weight"
weight of shipment, \fIrequired\fR, except if packaging is \fIEnvelope\fR
.Ip "weight_units" 4
.IX Item "weight_units"
one of \fIlbs\fR (default) or \fIkgs\fR
.Ip "dropoff_type" 4
.IX Item "dropoff_type"
where the shipment is to be picked up, one of \fIFedex\fR (a fedex centre, default),
\&\fIcourier\fR (scheduled pickup), \fIpickup\fR (you will call to schedule a pickup)
.SH "METHODS"
.IX Header "METHODS"
.Ip "new [name => val, name => val, ...]" 4
.IX Item "new [name => val, name => val, ...]"
creates a Business Fedex object, setting attributes passed
.Sp
See attr method for list of attributes
.Ip "attr \s-1KEY\s0 [\s-1VALUE\s0]" 4
.IX Item "attr KEY [VALUE]"
returns value of attribute \s-1KEY\s0, setting it to \s-1VALUE\s0 if defined.
.Sp
You can also say \f(CW$fedex\fR->\s-1KEY\s0 to get/set attributes (uses \s-1AUTOLOAD\s0)
.Ip "getrate [key => val, key => val, ...]" 4
.IX Item "getrate [key => val, key => val, ...]"
fetches the rates according to current attributes on FedEx site,
.Sp
opitonnally creates a Business Fedex object, setting attributes passed
.Sp
See services for details about fetching results.
.Ip "services" 4
.IX Item "services"
returns an array of services available, empty before get.
.Sp
Each entry is a hash ref, with keys:
.Sp
\&\fIservice\fR Name of Fedex service
.Sp
\&\fIdropoff\fR Cost at Dropoff
.Sp
\&\fIdelay\fR delay of delivery (not always defined)
.Sp
\&\fIother\fR Other charges (see other_details method)
.Sp
\&\fItotal\fR Total cost
.Ip "other_details" 4
.IX Item "other_details"
returns a hash of other details about rate, where key is the detail and value
is the cost of the detail.
.Sp
Mostly used by Fedex to describe costs that appear in the Other column of services.
.Ip "cheapest" 4
.IX Item "cheapest"
returns the cheapest service as a hash ref
.SH "BUGS"
.IX Header "BUGS"
None so far, contact author if any
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1LWP\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Francois Belanger, francois@sitepak.com
