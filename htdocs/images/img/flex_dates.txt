var formName;
var monthVal = new Array();
	
	monthVal["Jan"] = "0"
	monthVal["Feb"] = "1";
	monthVal["Mar"] = "2";
	monthVal["Apr"] = "3";
	monthVal["May"] = "4";
	monthVal["Jun"] = "5";
	monthVal["Jul"] = "6";
	monthVal["Aug"] = "7";
	monthVal["Sep"] = "8";
	monthVal["Oct"] = "9";
	monthVal["Nov"] = "10";
	monthVal["Dec"] = "11";


function getLOS(los) {

	//alert(formName) - defined in jhtml page;
	//alert(los);
	var dayIndex = document.forms[formName].checkInDay.selectedIndex;
	var monthIndex = document.forms[formName].checkInMonthYr.options.selectedIndex;
	var day = document.forms[formName].checkInDay.options[dayIndex].value;
	var month = document.forms[formName].checkInMonthYr.options[monthIndex].value.substring(0,3);
	var year = document.forms[formName].checkInMonthYr.options[monthIndex].value.substring(document.forms[formName].checkInMonthYr.options[monthIndex].value.indexOf(" "),document.forms[formName].checkInMonthYr.options[monthIndex].value.length);
	
	//alert (day);
	//alert (month);
	//alert (year);

	var inDate = new Date( year,monthVal[month],day );
        inDate.setHours(12);
	//alert(inDate.getTime());
	var outDate = new Date( inDate.getTime() + (86400000 * los) );
        outDate.setHours(12);
	//alert(outDate.getTime());
	//alert(los);
	if (day != '-1') {
		document.forms[formName].checkOutDay.value = outDate.getDate();
		//alert(outDate.getDate());
		document.forms[formName].checkOutMonthYr.value = dateToMonthYr( outDate );
		//alert(los);
	}
	
}

function reflectLOS(los) {

	//alert(formName) - defined in jhtml page;
	
	//alert(los);
	var inDayIndex = document.forms[formName].checkInDay.selectedIndex;
	var inMonthIndex = document.forms[formName].checkInMonthYr.options.selectedIndex;
	var inDay = document.forms[formName].checkInDay.options[inDayIndex].value;
	var inMonth = document.forms[formName].checkInMonthYr.options[inMonthIndex].value.substring(0,3);
	var inYear = document.forms[formName].checkInMonthYr.options[inMonthIndex].value.substring(document.forms[formName].checkInMonthYr.options[inMonthIndex].value.indexOf(" "),document.forms[formName].checkInMonthYr.options[inMonthIndex].value.length);

	var outDayIndex = document.forms[formName].checkOutDay.selectedIndex;
	var outMonthIndex = document.forms[formName].checkOutMonthYr.options.selectedIndex;
	var outDay = document.forms[formName].checkOutDay.options[outDayIndex].value;
	var outMonth = document.forms[formName].checkOutMonthYr.options[outMonthIndex].value.substring(0,3);
	var outYear = document.forms[formName].checkOutMonthYr.options[outMonthIndex].value.substring(document.forms[formName].checkOutMonthYr.options[outMonthIndex].value.indexOf(" "),document.forms[formName].checkOutMonthYr.options[outMonthIndex].value.length);
	

	var inDate2 = new Date( inYear,monthVal[inMonth],inDay );
        inDate2.setHours(12);
	//alert(inDate.getTime());
	var outDate2 = new Date( outYear,monthVal[outMonth],outDay );
        outDate2.setHours(12);
	//alert(outDate.getTime());
	var diff = 0; 
        tmp_diff = (outDate2.getTime() - inDate2.getTime()) / 86400000;
        diff = parseInt(tmp_diff); 

	if (inDay != '-1' && outDay != '-1') {
		if (diff <= 14) {
			document.forms[formName].los.value = diff;
		}
		else {
			document.forms[formName].los.value = "14";
		}
	}
	
}

function checkLOSLimit() {


	var inDayIndex2 = document.forms[formName].checkInDay.selectedIndex;
	var inMonthIndex2 = document.forms[formName].checkInMonthYr.options.selectedIndex;
	var inDay2 = document.forms[formName].checkInDay.options[inDayIndex2].value;
	var inMonth2 = document.forms[formName].checkInMonthYr.options[inMonthIndex2].value.substring(0,3);
	var inYear2 = document.forms[formName].checkInMonthYr.options[inMonthIndex2].value.substring(document.forms[formName].checkInMonthYr.options[inMonthIndex2].value.indexOf(" "),document.forms[formName].checkInMonthYr.options[inMonthIndex2].value.length);
	
	var outDayIndex2 = document.forms[formName].checkOutDay.selectedIndex;
	var outMonthIndex2 = document.forms[formName].checkOutMonthYr.options.selectedIndex;
	var outDay2 = document.forms[formName].checkOutDay.options[outDayIndex2].value;
	var outMonth2 = document.forms[formName].checkOutMonthYr.options[outMonthIndex2].value.substring(0,3);
	var outYear2 = document.forms[formName].checkOutMonthYr.options[outMonthIndex2].value.substring(document.forms[formName].checkOutMonthYr.options[outMonthIndex2].value.indexOf(" "),document.forms[formName].checkOutMonthYr.options[outMonthIndex2].value.length);
	
	
	var inDate2 = new Date( inYear2,monthVal[inMonth2],inDay2 );
        inDate2.setHours(12);
	//alert(inDate.getTime());
	var outDate2 = new Date( outYear2,monthVal[outMonth2],outDay2 );
        outDate2.setHours(12);
	//alert(outDate.getTime());
        var tmp_diff2 = 0; 
	var diff2 = 0; 
	tmp_diff2 = (outDate2.getTime() - inDate2.getTime()) / 86400000;
        diff2 = parseInt(tmp_diff2); 

	if (outDay2 != '-1') {

		if (diff2 > 9) {
			alert('There is a 9-night limit on reward redemption. Please change your selected dates.');
			return false;
		}
		else {

			return true;
		}
	}
}

function dateToMonthYr( date )
{

	var string = monthnames[ date.getMonth() ] + " " + date.getFullYear();

	//alert(string);
	return string;
}

function checkFlexSearch(formName) {

var flexSearch = document.forms[formName].flexibleSearch;
var losIndex = document.forms[formName].los.options.selectedIndex;
var losVal = document.forms[formName].los.options[losIndex].value;

	if (flexSearch.value == "true") {
		
		getLOS(losVal);
		
	}
}

function checkFlexSearchNoDates (formName) {

var flexSearch = document.forms[formName].flexibleSearch;

	if (flexSearch.value == "true") {
		
		if (checkNoDate(formName,'checkIn','checkOut')) {
			return true;
		}
		else {
			return false;
		}
	}
	else {
		return true;
	}
}

function checkBrandsToSearch(formName)
{
	var brandsIndex = document.forms[formName].brands.selectedIndex;
	var brandsVal = document.forms[formName].brands[brandsIndex].value;

	if (brandsVal == "true" || brandsVal == "")
	{
		document.forms[formName].searchAll.value = "true";
	}
}

function validateRewardSearch(formName) {

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value

//checkDate function in date_check.js

//formName is already taken so specifying the selectedHotels form directly
if(document.listform) {
	if(document.listform.selectedHotels) {
		retainSelectedHotels();
	}
}

	if (checkDate(formName,'checkIn','checkOut')) {

		if (checkHRRStateCountry(formName, countryVal, stateVal)) {
		
			if (document.forms[formName].flexibleSearch.value=="true") {
				

				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);

				if (checkFlexSearchNoDates(formName)) {

					if (checkLOSLimit()) {
										
						document.forms[formName].submit();
					}				
				}
			}
			else {	

					document.forms[formName].submit();
			}
		}
	}
}


function validateHotelRewardSearch(formName) {

	//checkDate function in date_check.js
	if (checkDate(formName,'checkIn','checkOut')) {
		
		if (document.forms[formName].flexibleSearch.value=="true") {
				
				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);
									
			if (checkFlexSearchNoDates(formName)) {

				if (checkLOSLimit()) {
									
					document.forms[formName].submit();
				}
					
			}
		}
			
		else {
		
				document.forms[formName].submit();
		}
	}
}

function validateHomeSearch(formName) {

// this is pretty much the same as validateRewardSearch, but there is no LOS limit

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value

	if (checkDate(formName,'checkIn','checkOut')) {

		if (checkStateCountry(formName, countryVal, stateVal)) {
		
			if (document.forms[formName].flexibleSearch.value=="true") {
				
				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);

				if (checkFlexSearchNoDates(formName)) {

						document.forms[formName].submit();
				}
			}
			else {	

					document.forms[formName].submit();
			}
		}
		else {
			return false;
		}
	}
}

function validateChangeSearch(formName) {

// this is pretty much the same as validateRewardSearch, but there is no LOS limit

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value

//copySelectedCtyhocns(formName);

//formName is already taken so specifying the selectedHotels form directly
if(document.listform) {
	if(document.listform.selectedHotels) {
		retainSelectedHotels();
	}
}

	if (checkDate(formName,'checkIn','checkOut')) {

		if (checkChangeStateCountry(formName, countryVal, stateVal)) {
		
			if (document.forms[formName].flexibleSearch.value=="true") {
				
				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);

				if (checkFlexSearchNoDates(formName)) {

						document.forms[formName].submit();
				}
			}
			else {	

					document.forms[formName].submit();
			}
		}
		else {
			return false;
		}
	}
}

function validateAdvancedSearch(formName) {

// used by the advanced hotel search page's city tab

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value

	//checkDate function in date_check.js

	if (checkDate(formName,'checkIn','checkOut')) {

		if (checkStateCountry(formName, countryVal, stateVal)) {
		
			if (document.forms[formName].flexibleSearch.value=="true") {
				

				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);

				if (checkFlexSearchNoDates(formName)) {

					document.forms[formName].submit();

				}
			}
			else {	

					document.forms[formName].submit();
			}
		}
	}
}

function validateAdvancedAirportSearch(formName) {

// used by the advanced hotel search page's airport tab
// that form doesn't have 'city', but instead has an 'airport' field

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value


var missingAirportMessage = "Please enter the aiport code or city, state, and/or country.";
var keepgoing = true;

	//checkDate function in date_check.js

	if (checkDate(formName,'checkIn','checkOut')) {

		if (document.forms[formName].airport.value == 'City or Airport Code') {
				alert(missingAirportMessage);
        keepgoing = false;
        return;
		}
		else if (document.forms[formName].airport.value == '') {
			alert(missingAirportMessage);
      keepgoing = false;
		}

    if (keepgoing) {		
			if (document.forms[formName].flexibleSearch.value=="true") {

				getLOS(document.forms[formName].los.options[document.forms[formName].los.options.selectedIndex].value);

				if (checkFlexSearchNoDates(formName)) {
						document.forms[formName].submit();
				}
			}
			else {	

					document.forms[formName].submit();
			}
		}
  }
}

function validateStaticSearch(formName) {

// this is pretty much the same as validateRewardSearch, but we arent
// checking for LOS, and aren't checking for flexible search = true

var countryIndex = document.forms[formName].country.selectedIndex
var countryVal = document.forms[formName].country[countryIndex].value
var stateIndex = document.forms[formName].state.selectedIndex
var stateVal = document.forms[formName].state[stateIndex].value

	//checkDate function in date_check.js

	if (checkDate(formName,'checkIn','checkOut')) {

		if (checkStateCountry(formName, countryVal, stateVal)) {

			document.forms[formName].submit();
		}
	}
}

function checkHRRStateCountry(formName, countryVal, stateVal) {

	var stateCountryMessage;
	var formType = document.forms[formName].searchType.value;
	
	if (document.forms[formName].searchType.value=="address") {
		stateCountryMessage = "Please enter an address and city/state inside the U.S.A. or a country outside the U.S.A.";
	}
	else if (document.forms[formName].searchType.value=="airport") {
		stateCountryMessage = "Please enter an aiport code or city, state inside the U.S.A, and/or country.";
	}
	else if (document.forms[formName].searchType.value=="attraction") {
		stateCountryMessage = "Please enter an attraction name, state inside the U.S.A, and/or country.";
	}
	else {
		stateCountryMessage = "Please enter a city/state inside the U.S.A. or a country outside the U.S.A.";
	}

	if (countryVal == 'US' && stateVal == '') {
		alert(stateCountryMessage);
		return false;
	}
	else if (countryVal == 'US' && stateVal != '') {
		
		if (formType == "city") {
	
			if (document.forms[formName].city.value == 'City') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == 'City or Airport Code') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == 'Attraction name') {
				alert(stateCountryMessage);
				return false;
			} 
			else if (document.forms[formName].city.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else if (formType == "airport") {
		
			 if (document.forms[formName].city.value == 'City or Airport Code') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else if (formType == "attraction") {
		
			 if (document.forms[formName].city.value == 'Attraction name') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else {
			return true;
		}
	}
	else {

		return true;
	}
}

function checkChangeStateCountry(formName, countryVal, stateVal) {

	var stateCountryMessage;
	
	if (document.forms[formName].searchType.value=="address") {
		stateCountryMessage = "Please enter an address and city/state inside the U.S.A. or a country outside the U.S.A.";
	}
	else if (document.forms[formName].searchType.value=="airport") {
		stateCountryMessage = "Please enter an aiport code or city, state inside the U.S.A, and/or country.";
	}
	else if (document.forms[formName].searchType.value=="attraction") {
		stateCountryMessage = "Please enter an attraction name, state inside the U.S.A, and/or country.";
	}
	else {
		stateCountryMessage = "Please enter a city/state inside the U.S.A. or a country outside the U.S.A.";
	}

	if (countryVal == 'US' && stateVal == '') {
		alert(stateCountryMessage);
		return false;
	}
	else if (countryVal == 'US' && stateVal != '') {
		
		if (document.forms[formName].airport) {
		
			 if (document.forms[formName].airport.value == 'City or Airport Code') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].airport.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else if (document.forms[formName].attraction) {
		
			 if (document.forms[formName].attraction.value == 'Attraction name') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].attraction.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else {
			return true;
		}
	}
	else {

		return true;
	}
}

function checkStateCountry(formName, countryVal, stateVal) {

	var stateCountryMessage;
	var formType = document.forms[formName].searchType.value;
	
	if (document.forms[formName].searchType.value=="address") {
		stateCountryMessage = "Please enter an address and city/state inside the U.S.A. or a country outside the U.S.A.";
	}
	else if (document.forms[formName].searchType.value=="airport") {
		stateCountryMessage = "Please enter an aiport code or city, state inside the U.S.A, and/or country.";
	}
	else if (document.forms[formName].searchType.value=="attraction") {
		stateCountryMessage = "Please enter an attraction name, state inside the U.S.A, and/or country.";
	}
	else {
		stateCountryMessage = "Please enter a city/state inside the U.S.A. or a country outside the U.S.A.";
	}

	if (countryVal == 'US' && stateVal == '') {
		alert(stateCountryMessage);
		return false;
	}
	else if (countryVal == 'US' && stateVal != '') {
	
		if (formType == "city") {
			
			return true;
			
		}		
		else if (formType == "airport") {
		
			 if (document.forms[formName].city.value == 'City or Airport Code') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else if (formType == "attraction") {
		
			 if (document.forms[formName].city.value == 'Attraction name') {
				alert(stateCountryMessage);
				return false;
			}
			else if (document.forms[formName].city.value == '') {
				alert(stateCountryMessage);
				return false;
			}
			else {
			
				return true;
			}
		}
		else {
			return true;
		}
	}
	else {

		return true;
	}
}

function swapElement(hideElement,showElement)
{
	document.getElementById(hideElement).style.display="none";
	document.getElementById(showElement).style.display="";
}

function swapText(element,newTxt)
{
    element = document.getElementById(element);
    if (element != null)
    {
        element.innerHTML = newTxt;
    }
}

function retainSelectedHotels() {

	var checkboxes = document.listform.selectedHotels;
	var ctyhocns = "";

	if (checkboxes) {
		if (checkboxes.length) {
			// there are an array of checkboxes, loop through them
			for (var i = 0; i < checkboxes.length; i++) {
				if (checkboxes[i].checked) {
					ctyhocns = ctyhocns + checkboxes[i].value + ",";
				}
			}
		} else {
			// there is only one checkbox, get it's value
			if (checkboxes.checked) {
				ctyhocns = checkboxes.value + ",";
			}
		}
	}
	
	document.forms[formName].selectedHotels.value= ctyhocns.substring( 0, ctyhocns.length - 1 );

	return;
}

