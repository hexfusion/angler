/*to make sure use does not select dates in the past or that check-out date is not before check-in - jkenney*/

function checkDate(formName,checkin,checkout,issmallgroups) {

	var x = eval("document."+formName);
	var checkinDay = parseInt(x[checkin+"Day"].options[x[checkin+"Day"].selectedIndex].value);
	var checkinMonthYr = x[checkin+"MonthYr"].options[x[checkin+"MonthYr"].selectedIndex].value;
	var checkinMonth = checkinMonthYr.substring(0,3);
	var checkinYear = checkinMonthYr.substring(checkinMonthYr.indexOf(" "),checkinMonthYr.length);
	var checkoutDay = parseInt(x[checkout+"Day"].options[x[checkout+"Day"].selectedIndex].value);
	var checkoutMonthYr = x[checkout+"MonthYr"].options[x[checkout+"MonthYr"].selectedIndex].value;
	var checkoutMonth = checkoutMonthYr.substring(0,3);
	var checkoutYear = checkoutMonthYr.substring(checkoutMonthYr.indexOf(" "),checkoutMonthYr.length);
	
	var checkinMonthNum = getMonthNum(checkinMonth);
	var checkoutMonthNum = getMonthNum(checkoutMonth);
		
	var now = new Date();
	var currentDay = now.getDate();
	var currentMonth = now.getMonth()+1;
	var currentYear = now.getFullYear();

	/*debug
	alert("checkinYear: "+checkinYear);
	alert("currentYear: "+currentYear);
	alert(currentYear+1);
	alert("checkinMonthNum: "+checkinMonthNum);
	alert("currentMonth: "+currentMonth);
	alert("checkinDay: "+checkinDay);
	alert("currentDay: "+currentDay);
	alert("checkoutMonthNum: "+checkinMonthNum);
	alert("checkoutDay: "+checkinDay);
	*/

	if( (checkinDay != "-1") || (checkinMonthYr != "") ) {
		if (checkinYear <= currentYear && checkoutYear <= currentYear) {
			if ( (checkinMonthNum < currentMonth) || (checkinMonthNum <= currentMonth && checkinDay < currentDay) ) {
				if(x.flexibleSearch && x.flexibleSearch.value=="true") {
					alert ("Start date cannot be a past date"); 
					return false;
				}
                else if ( issmallgroups ) {
					alert ("Event Start date cannot be a past date"); 
					return false;
                } 
				else {
					alert ("Check-in date cannot be a past date"); 
					return false;
				}
			}
		}
		// we now make sure the checkout date is also with 365 days - as of May 2006 
		if (checkinYear == currentYear+1 && ((checkinMonthNum >= currentMonth && checkinDay >= currentDay) ||
                                         (checkoutMonthNum >= currentMonth && checkoutDay > currentDay))) {
                if ( issmallgroups ) {
				    alert ("Please enter dates within the next 12 months.");
                } else {
				    alert ("Your travel dates must not be greater than 365 days in advance. Please enter new dates and try again.");
                }
				return false;
			}
		if(checkoutDay != '-1') {
			if ( (checkoutMonthNum < checkinMonthNum && checkoutYear <= checkinYear) || (checkoutMonthNum == checkinMonthNum && checkoutDay <= checkinDay) ) {
				if ( issmallgroups ) {
					alert ("Event End date must be after Event Start date.");
				} else {
					alert ("Check-out date must be later than Check-in date");
				}
				return false;
			}
		}
		if(!(x.flexibleSearch && x.flexibleSearch.value=="true")) {

			if (checkoutYear < checkinYear) {
				if ( issmallgroups ) {
					alert ("Event End date must be after Event Start date.");
				} else {
					alert ("Check-out date must be later than Check-in date");
				}
				return false;
			}
			else {
				return true;
			}
		}
		else {
			/* for the flexible search, they must enter data before continuing */
       if (checkNoDate(formName,'checkIn','checkOut')) {
  		 		return true;
       } else {
	        return false;
       }
		}
	}
	else {
		return true;
	}
	
}

function getMonthNum(month) 
{
	var monthNames = new Array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");
	var pattern = month;
	
		for (i=0; i<monthNames.length; i++) {
			if (monthNames[i].match(pattern)) {
				var monthNum = i+1;
				break;
			}
		}
		
		return monthNum;
}

/* to make sure the user enters dates for availibility search - jkenney*/
function checkNoDate(formName,checkin,checkout) {

	var x = eval("document."+formName);
	var checkinDay = parseInt(x[checkin+"Day"].options[x[checkin+"Day"].selectedIndex].value);
	var checkinMonthYr = x[checkin+"MonthYr"].options[x[checkin+"MonthYr"].selectedIndex].value;
	var checkinMonth = checkinMonthYr.substring(0,3);
	var checkinYear = checkinMonthYr.substring(checkinMonthYr.indexOf(" "),checkinMonthYr.length);
	var checkoutDay = parseInt(x[checkout+"Day"].options[x[checkout+"Day"].selectedIndex].value);
	var checkoutMonthYr = x[checkout+"MonthYr"].options[x[checkout+"MonthYr"].selectedIndex].value;
	var checkoutMonth = checkoutMonthYr.substring(0,3);
	var checkoutYear = checkoutMonthYr.substring(checkoutMonthYr.indexOf(" "),checkoutMonthYr.length);
	
	if ((checkinDay == "-1" || checkinMonthYr == "") ||(checkoutDay == "-1" || checkoutMonthYr == "")) {
		if(x.flexibleSearch && x.flexibleSearch.value=="true") {
			alert ("Please enter a Start date"); 
			return false;
		}
		else {
			alert ("Please enter valid dates");
			return false;
		}
	}
	else{
		return true;
	}
}

function isWithinNumDays(date1, date2, numday) {
	/* 1 day = 86400000 msec */
	//alert(date1+" "+date2+" "+numday);
	return (date2.getTime() >= date1.getTime() && (date2.getTime()-date1.getTime()) < 86400000*numday+1);
}

/* check date for groups search */
function checkGroupsDate(formName,checkin,checkout) {
	var now = new Date();
	var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
	var x = eval("document."+formName);
	var checkinDay = parseInt(x[checkin+"Day"].options[x[checkin+"Day"].selectedIndex].value);
	var checkinMonthYr = x[checkin+"MonthYr"].options[x[checkin+"MonthYr"].selectedIndex].value;
	var checkinMonth = checkinMonthYr.substring(0,3);
	var checkinYear = checkinMonthYr.substring(checkinMonthYr.indexOf(" "),checkinMonthYr.length);
	var checkoutDay = parseInt(x[checkout+"Day"].options[x[checkout+"Day"].selectedIndex].value);
	var checkoutMonthYr = x[checkout+"MonthYr"].options[x[checkout+"MonthYr"].selectedIndex].value;
	var checkoutMonth = checkoutMonthYr.substring(0,3);
	var checkoutYear = checkoutMonthYr.substring(checkoutMonthYr.indexOf(" "),checkoutMonthYr.length);
	
	var checkinDateToCheck = new Date(checkinYear, getMonthNum(checkinMonth)-1, checkinDay);
	var checkoutDateToCheck = new Date(checkoutYear, getMonthNum(checkoutMonth)-1, checkoutDay);
	
	if (checkDate(formName,checkin,checkout,true)) {
		if (checkinDay == "-1" || checkinDay == "" || checkoutDay == "-1" || checkoutMonthYr == "") {
			return true;
		} else {
			if (isWithinNumDays(checkinDateToCheck, checkoutDateToCheck, 14)) {
				if (!isWithinNumDays(today, checkinDateToCheck, 3)) {
					return true;
				} else {
					alert ("Please choose an Event Start Date more than 3 days from today. If you need to book a Group Event that is less than 3 days from today, please contact the hotel directly.");
					return false;
				}
			} else {
				alert ("Please enter a date range of 14 days or less if you would like to book online.  If you need to book a group for more than 14 days, please leave dates blank for hotel search. Then, submit a Request for Proposal.");
				return false;
			}
		}
	} else {
		return false;
	}
}
