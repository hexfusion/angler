#! /usr/bin/env perl
#
# Update products from old live database.

use strict;
use warnings;

use Dancer ':script';
use Dancer::Plugin::Interchange6;
use Dancer::Plugin::Database;

set logger => 'console';
set logger_format => '%m';
set log => 'debug';

my $dbh = database;

# $dbh->quick_delete('products', {});

my @products = $dbh->quick_select('products', {});

#shop_product->search()->delete;

my %navigation_map = ('Rods' => 'Fly Rods',
    'Waders' => 'Waders',
    'Reels' => 'Fly Reels',
    'Boxes' => 'Fly Boxes',
    'Raingear' => 'Jackets',
    'Softshell' => 'Jackets',
    'Nets' => 'Landing Nets',
    'Vests' => 'Packs & Vests',
    'Luggage' => 'Bags & Luggage',
    'Bags' => 'Bags & Luggage',
    'Socks' => 'Socks',
    'Layering' => 'Layering',
    'Pants' => 'Pants',
    'Gadgets' => 'Tools & Gadgets',
    'Lines' => 'Fly Line & Backing',
    'Underwear' => 'Underwear',
    'Hats' => 'Hats',
    'Shorts' => 'Shorts',
    'Shirt' => 'Shirts',
    'Shirts' => 'Shirts',
    'Headlamps' => 'Tools & Gadgets',
    'Dvd' => 'Books & DVDs',
    'Books' => 'Books & DVDs',
    );

my @variants = $dbh->quick_select('variants', {});
my %sizes;
my @size_values;

for my $var (@variants) {
    if ($var->{size} && ! exists $sizes{$var->{size}}) {
        $sizes{$var->{size}} = 1;
        push @size_values, {value => $var->{size},
                            title => $var->{size},
                        }
    }
}

# delete size attribute
my $size_att = shop_schema->resultset('Attribute')->find({name => 'size'});

if ($size_att) {
    $size_att->delete;
};

# create size attribute
my $size_data = {name => 'size', title => 'Size', type => 'variant', priority => 1,
                 AttributeValue => \@size_values,
             };

my $size_att = shop_schema->resultset('Attribute')->create($size_data);

for my $product (@products) {
    my $object;

    my %record = (sku => $product->{sku},
                  name => $product->{description},
                  short_description => $product->{comment_short} || '',
                  price => $product->{price},
                  active => ! $product->{inactive},
              );
    
    if (! ($object = shop_product->find($product->{sku}))) {
        debug "Product $product->{sku} missing.\n";

        $object = shop_product->create(\%record);
    }
    else {
        $object->update(\%record);
    }

    if ($product->{category} && exists $navigation_map{$product->{category}}) {
        if (my $nav = shop_navigation->find({name => $navigation_map{$product->{category}}})) {
            shop_schema->resultset('NavigationProduct')->find_or_create({sku => $product->{sku},
                                                                         navigation_id => $nav->id});
        }
        else {
            warning "Category $navigation_map{$product->{category}} not found.";
        }
    }

    # get rid of existing variants
    my $old_variants = $object->search_related('Variant');

    $old_variants->delete;

    # get all variants for this product
    my @variants = $dbh->quick_select('variants', {sku => $product->{sku}});
    my @var_data;

    for my $var (@variants) {
        if ($var->{size}) {
#            debug "Variant $var->{code} for SKU $product->{sku} with size $var->{size}";
            push @var_data, {size => $var->{size},
                             sku => $var->{code},
                         };
        }
    }

    if (@var_data) {
        $object->add_variants(@var_data);
    }
}

