#! /usr/bin/env perl

use strict;
use warnings;

use Dancer ':script';
use Dancer::Plugin::Interchange6;

set logger        => 'console';
set logger_format => '%m';

use Locale::SubCountry;
use DateTime qw();

my $now    = DateTime->now;
my $schema = shop_schema;
my $data;

shop_schema->deploy( { add_drop_table => 1 } );

# populate countries array
use Interchange6::Schema::Populate::CountryLocale;
my $pop_countries = Interchange6::Schema::Populate::CountryLocale->new->records;

# populate states array
use Interchange6::Schema::Populate::StateLocale;
my $pop_states = Interchange6::Schema::Populate::StateLocale->new->records;

# populate zones array
use Interchange6::Schema::Populate::Zone;
my $pop_zones = Interchange6::Schema::Populate::Zone->new->records;

# populate message_types
use Interchange6::Schema::Populate::MessageType;
my $pop_message_types =
  Interchange6::Schema::Populate::MessageType->new->records;

# populate countries table
$schema->populate( Country => $pop_countries );

# populate states table
$schema->populate( State => $pop_states );

# populate zones table
scalar $schema->populate( Zone => $pop_zones );

# populate message_types table
$schema->populate( MessageType => $pop_message_types );

my $state = $schema->resultset("State")->find( { country_iso_code => 'US', state_iso_code => 'NY' });
my $state_oregon = $schema->resultset("State")->find( { country_iso_code => 'US', state_iso_code => 'OR' });

# roles
my $roles = $schema->resultset("Role")->populate([
    { roles_id => '1', name => 'anonymous', label => 'Anonymous Users' },
    { roles_id => '2', name => 'authenticated', label => 'Authenticated Users' },
    { roles_id => '3', name => 'user', label => 'User' },
    { roles_id => '4', name => 'admin', label => 'Admin' },
    { roles_id => '5', name => 'editor', label => 'Editor' },
    { roles_id => '6', name => 'pro', label => 'Industry Pro' },
    { roles_id => '7', name => 'staff', label => 'Shop Staff' },
  ]);

my %users;

# Create user john
$users{john} = shop_user->create(
    { username => 'john', password => 'john', first_name => 'John',
      last_name => 'Miller', email => 'sam@westbranchresort.com',
      created => $now,
      user_roles => [
          { roles_id => '3' },
          { roles_id => '6' },
      ],
  });

shop_address->create({
    users_id => $users{john}->id,
    first_name => $users{john}->first_name,
    last_name => $users{john}->last_name,
    type => 'shipping',
    address => 'Test Road',
    postal_code => '13783',
    city => 'Hancock',
    states_id => $state->id,
    country_iso_code => 'US',
});

# Create user ben
$users{ben} = shop_user->create(
    { username => 'ben', password => 'ben', first_name => 'Ben',
      last_name => 'Sheard', email => 'sam@westbranchresort.com',
      created => $now,
      user_roles => [
          { roles_id => '3' },
          { roles_id => '7' },
      ],
  });

# Create user greg
$users{greg} = shop_user->create(
    { username => 'gregory', password => 'gregory', nickname => 'pike lover',
      first_name => 'Gregor', last_name => 'Fisherman',
      email => 'greg@perl.dance', created => $now,
      user_roles => [
        { roles_id => '3' },
      ],
  });

shop_address->create({
    users_id => $users{greg}->id,
    first_name => $users{greg}->first_name,
    last_name => $users{greg}->last_name,
    type => 'shipping',
    address => 'Crescent Ave',
    postal_code => '97403',
    city => 'Eugene',
    states_id => $state_oregon->id,
    country_iso_code => 'US',
});

# Create user sam
$users{sam} = shop_user->create(
    { username => 'sam', password => 'sam', nickname => 'trout lover',
      first_name => 'Sam', last_name => 'Batschelet',
      email => 'sbatschelet@mac.com', created => $now,
      user_roles => [
        { roles_id => '3' },
        { roles_id => '7' },
      ],
  });

# navigatiom
my $nav = $schema->resultset("Navigation")->populate([
{ uri => 'Fly-Fishing-Gear', type => 'menu', description => 'Gear for fly fishing' },
{ uri => 'Clothing/Mens', type => 'menu', description => 'Clothing for fly fishing' },
{ uri => 'Fly-Tying', type => 'menu', description => 'Materials for fly tying' },
{ uri => 'Flies', type => 'menu', description => 'Flies for fishing' },
{ uri => 'Fly-Fishing-Gear/Fly-Rods', type => 'menu', scope => 'cat-gear', name => 'Fly Rods' },
{ uri => 'Fly-Fishing-Gear/Fly-Reels', type => 'menu', scope => 'cat-gear', name => 'Fly Reels' },
{ uri => 'Fly-Fishing-Gear/Fly-Line', type => 'menu', scope => 'cat-gear', name => 'Fly Line & Backing' },
{ uri => 'Fly-Fishing-Gear/Waders', type => 'menu', scope => 'cat-gear', name => 'Waders' },
{ uri => 'Fly-Fishing-Gear/Wading-Boots', type => 'menu', scope => 'cat-gear', name => 'Wading Boots' },
{ uri => 'Fly-Fishing-Gear/Fly-Boxes', type => 'menu', scope => 'cat-gear', name => 'Fly Boxes' },
{ uri => 'Fly-Fishing-Gear/Packs-Vests', type => 'menu', scope => 'cat-gear', name => 'Packs & Vests' },
{ uri => 'contact', type => 'menu', scope => 'nav-top', name => 'Contact' },
{ uri => 'about-us', type => 'menu', scope => 'nav-top', name => 'About Us' },
{ uri => 'shipping', type => 'menu', scope => 'nav-top', name => 'Shipping' },
{ uri => 'login', type => 'nav', scope => 'top-login', name => 'Login' },
{ uri => 'registration', type => 'nav', scope => 'top-login', name => 'Sign Up' },
{ uri => 'Fly-Fishing-Gear/Leader-Tippet', type => 'menu', scope => 'cat-gear-r', name => 'Leader & Tippet' },
{ uri => 'Fly-Fishing-Gear/Tools-Gadgets', type => 'menu', scope => 'cat-gear-r', name => 'Tools & Gadgets' },
{ uri => 'Fly-Fishing-Gear/Bags-Luggage', type => 'menu', scope => 'cat-gear-r', name => 'Bags & Luggage' },
{ uri => 'Fly-Fishing-Gear/Nets', type => 'menu', scope => 'cat-gear-r', name => 'Landing Nets' },
{ uri => 'Fly-Fishing-Gear/Watercraft-Boats', type => 'menu', scope => 'cat-gear-r', name => 'Watercraft & Boats' },
{ uri => 'Fly-Fishing-Gear/Books-DVDs', type => 'menu', scope => 'cat-gear-r', name => 'Books & DVDs' },
{ uri => 'Fly-Fishing-Gear/Fly-Rod-Combos', type => 'menu', scope => 'cat-gear', name => 'Fly Rod Combos' },
{ uri => 'Fly-Fishing-Gear/New', type => 'menu', scope => 'cat-gear', name => 'New Products!' },
{ uri => 'Clothing/Mens/Jackets', type => 'menu', scope => 'cat-clothing', name => 'Jackets' },
{ uri => 'Clothing/Mens/Fleece', type => 'menu', scope => 'cat-clothing', name => 'Fleece' },
{ uri => 'Clothing/Mens/Layering', type => 'menu', scope => 'cat-clothing', name => 'Layering' },
{ uri => 'Clothing/Mens/Shirts', type => 'menu', scope => 'cat-clothing', name => 'Shirts' },
{ uri => 'Clothing/Mens/T-Shirts', type => 'menu', scope => 'cat-clothing', name => 'T-Shirts' },
{ uri => 'Clothing/Mens/Pants', type => 'menu', scope => 'cat-clothing', name => 'Pants' },
{ uri => 'Clothing/Mens/Underwear', type => 'menu', scope => 'cat-clothing', name => 'Underwear' },
{ uri => 'Clothing/Mens/Hats', type => 'menu', scope => 'cat-clothing', name => 'Hats' },
{ uri => 'Clothing', type => 'menu', scope => 'cat-clothing', name => 'Clothing Men\'s' },
{ uri => 'Clothing/Mens/WBA-Logo', type => 'menu', scope => 'cat-clothing', name => 'WBA Logo Gear' },
{ uri => 'Clothing/Mens/Shorts', type => 'menu', scope => 'cat-clothing-r', name => 'Shorts' },
{ uri => 'Clothing/Mens/Socks', type => 'menu', scope => 'cat-clothing-r', name => 'Socks' },
{ uri => 'logout', type => 'nav', scope => 'top-logout', name => 'Logout' },
{ uri => 'user/account', type => 'nav', scope => 'top-logout', name => 'My Account' },
]);
